plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// jwt 라이브러리 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// 이메일 전송을 위해 사용
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// sns 로그인을 위해 추가
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// swagger 의존성 추가
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// email
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	// Jwt handling
	implementation 'com.auth0:java-jwt:4.5.0'
	// OAuth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	// firebase
	implementation 'com.google.firebase:firebase-admin:9.1.1'
	    // @PostConstruct
	    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	
	    // WebSocket and STOMP for real-time chat
	    implementation 'org.springframework.boot:spring-boot-starter-websocket'



}

tasks.named('test') {
	useJUnitPlatform()
}
