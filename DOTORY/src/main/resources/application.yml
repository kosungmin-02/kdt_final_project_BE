spring:
  # 기본 프로필을 'local'로 설정 (개발 시 application-local.yml을 기본으로 읽음)
  profiles:
    active: local

  security:
    oauth2:
      client:
        registration:
          # 카카오
          kakao:
            client-id: ${KAKAO_CLIENT_ID}                # ⚠️ 환경 변수 또는 local.yml에서 주입
            client-secret: ${KAKAO_CLIENT_SECRET}        # ⚠️ 환경 변수 또는 local.yml에서 주입
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - account_email
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: ${KAKAO_REDIRECT_URI}          # ⚠️ 환경 변수 또는 local.yml에서 주입 (예: http://localhost:8080/login/oauth2/code/kakao)
          # 네이버
          naver:
            client-id: ${NAVER_CLIENT_ID}                # ⚠️ 환경 변수 또는 local.yml에서 주입
            client-secret: ${NAVER_CLIENT_SECRET}            # ⚠️ 환경 변수 또는 local.yml에서 주입
            client-authentication-method: client_secret_post
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: ${NAVER_REDIRECT_URI}         # ⚠️ 환경 변수 또는 local.yml에서 주입 (예: http://localhost:8080/login/oauth2/code/naver)
            scope:
              - name
              - email

        provider:
          # 카카오, 네이버의 provider 설정은 공개된 정보이므로 application.yml에 두어도 안전합니다.
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  datasource:
    url: ${SPRING_DATASOURCE_URL}           # ⚠️ 환경 변수 또는 local.yml에서 주입 (예: jdbc:mysql://localhost:3306/dotory?...)
    username: ${SPRING_DATASOURCE_USERNAME} # ⚠️ 환경 변수 또는 local.yml에서 주입
    password: ${SPRING_DATASOURCE_PASSWORD} # ⚠️ 환경 변수 또는 local.yml에서 주입
    driver-class-name: com.mysql.cj.jdbc.Driver

  # Spring Starter Mail
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SPRING_MAIL_USERNAME}         # ⚠️ 환경 변수 또는 local.yml에서 주입
    password: ${SPRING_MAIL_PASSWORD}         # ⚠️ 환경 변수 또는 local.yml에서 주입
    protocol: smtp
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  jpa:
    hibernate:
      # ddl-auto: update (개발 환경) / validate 또는 none (운영 환경)
      ddl-auto: update # ⚠️ 이 설정은 프로필(local/prod)에 따라 다르게 설정하는 것이 좋습니다.
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
    open-in-view: false # 💡 성능을 위해 false로 설정하는 것이 좋습니다.

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

cloud:
  aws:
    enabled: false # AWS 관련 설정이 필요할 때까지 비활성화

jwt:
  secret: ${JWT_SECRET_KEY}               # ⚠️ 환경 변수 또는 local.yml에서 주입
  expiration: 86400000